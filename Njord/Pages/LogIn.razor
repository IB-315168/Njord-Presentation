@page "/login"
@using Domain.DTOs
@using Domain.Models
@using HttpClients.ClientInterfaces
@inject IUserService userService

<div class="card">
    <h3>Log in</h3>
    <div class="form-group field">
        <label>E-mail:</label>
        <input type="email" @bind="email" @bind:event="oninput" />
        <label>Password:</label>
        <input type="password" @bind="password" @bind:event="oninput" />
        @if (!string.IsNullOrEmpty(resultMsg))
        {
            <label style="color: @color">@resultMsg</label>
        }
    </div>
    <div class="button-row">
        <button @onclick="Login" disabled="@(string.IsNullOrEmpty(email) || string.IsNullOrEmpty(password))" class="acceptbtn">
            Log in
        </button>
    </div>
</div>

@code {
    private string email = "";
    private string password = "";
    private string resultMsg = "";
    private string color = "";

    private async Task Login()
    {
        resultMsg = "";

        try
        {
            User user = await userService.LoginAsync(new UserLoginDTO()
                {
                    Email = email,
                    Password = password
                });

            email = "";
            password = "";
            resultMsg = $"Logged in succsessfully - hello, {user.FullName}!";
            color = "green";
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            resultMsg = e.Message;
            color = "red";
        }
    }
}
